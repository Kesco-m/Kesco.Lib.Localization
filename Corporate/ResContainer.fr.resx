<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="SLBL_Form_Title" xml:space="preserve">
		<value>Liste des adresses sécurisées et bloquées</value>
	</data>
	<data name="SLBL_NTF_Адрес" xml:space="preserve">
		<value>Vous devez fournir une adresse e-mail.</value>
	</data>
	<data name="SLBL_NTF_ВидСписка" xml:space="preserve">
		<value>Vous devez sélectionner une vue de liste.</value>
	</data>
	<data name="SLBL_NTF_Title" xml:space="preserve">
		<value>Message</value>
	</data>
	<data name="SLBL_ВидСписка_0" xml:space="preserve">
		<value>Liste des adresses sécurisées (les lettres de ces adresses n'entreront pas en quarantaine de spam)</value>
	</data>
	<data name="SLBL_ВидСписка_1" xml:space="preserve">
		<value>Liste des adresses bloquées (les lettres de ces adresses seront toujours en quarantaine de spam)</value>
	</data>
	<data name="SLBL_Form_ListHelp" xml:space="preserve">
		<value>Les formats suivants peuvent être utilisés: user@domain.com, server.domain.com, domain.com</value>
	</data>
	<data name="SLBL_Form_Label_Адрес" xml:space="preserve">
		<value>Adresse électronique</value>
	</data>
	<data name="SLBL_Form_SaveConfirm" xml:space="preserve">
		<value>Cette opération peut prendre jusqu'à deux minutes.</value>
	</data>
	<data name="SLBL_Form_SaveConfirm1" xml:space="preserve">
		<value>Etes-vous sûr de vouloir effectuer cette opération?</value>
	</data>
	<data name="SLBL_Form_Check_NotDeleted" xml:space="preserve">
		<value>Enregistrements sauvegardés qui n'ont pas pu être supprimés</value>
	</data>
	<data name="SLBL_Form_Check_NotSaved" xml:space="preserve">
		<value>Nouvelles entrées qui n'ont pas pu être enregistrées</value>
	</data>
	<data name="SLBL_Form_Check_ExecOperation" xml:space="preserve">
		<value>L'opération a échoué!</value>
	</data>
	<data name="SLBL_Form_Check_ExecOperationQ" xml:space="preserve">
		<value>Effectuer à nouveau une opération de sauvegarde?</value>
	</data>
	<data name="SLBL_Form_Check_DataSaved" xml:space="preserve">
		<value>Les données ont bien été enregistrées!</value>
	</data>
	<data name="SLBL_Form_Check_CloseFormQ" xml:space="preserve">
		<value>Fermer le formulaire?</value>
	</data>
	<data name="SLBL_Form_CheckChanges" xml:space="preserve">
		<value>Modifications non enregistrées!</value>
	</data>
	<data name="SLBL_Form_CheckChanges1" xml:space="preserve">
		<value>Voulez-vous recharger les données?</value>
	</data>
	<data name="TMLT_ButtonSearch_Title" xml:space="preserve">
		<value>Rechercher un type d'attribut dans un modèle</value>
	</data>
	<data name="TMLT_ButtonClear_Title" xml:space="preserve">
		<value>Effacer les types d'attributs de champ de valeur</value>
	</data>
	<data name="TMLT_ButtonInsert_Title" xml:space="preserve">
		<value>Insérer le type d'attribut dans le modèle</value>
	</data>
	<data name="TMLT_LabelAttrs" xml:space="preserve">
		<value>Types d'attributs</value>
	</data>
</root>